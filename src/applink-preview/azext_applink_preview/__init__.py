# --------------------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
#
# Code generated by aaz-dev-tools
# --------------------------------------------------------------------------------------------

from azure.cli.core import AzCommandsLoader
from azext_applink_preview._help import helps  # pylint: disable=unused-import


class ApplinkPreviewCommandsLoader(AzCommandsLoader):

    def __init__(self, cli_ctx=None):
        from azure.cli.core.commands import CliCommandType
        custom_command_type = CliCommandType(
            operations_tmpl='azext_applink_preview.custom#{}')
        super().__init__(cli_ctx=cli_ctx,
                         custom_command_type=custom_command_type)

    def load_command_table(self, args):
        from azext_applink_preview.commands import load_command_table
        from azure.cli.core.aaz import load_aaz_command_table
        try:
            from . import aaz
        except ImportError:
            aaz = None
        if aaz:
            load_aaz_command_table(
                loader=self,
                aaz_pkg_name=aaz.__name__,
                args=args
            )
        load_command_table(self, args)

        # Add table transformers to AAZ commands
        self._add_table_transformers()

        return self.command_table

    def _add_table_transformers(self):
        """Add table transformers to AAZ-generated commands."""
        from azext_applink_preview._format import (
            applink_list_versions_table_format,
            applink_member_list_table_format,
            applink_member_upgrade_history_table_format
        )

        # Map command names to their table transformers
        table_transformers = {
            'applink list-versions': applink_list_versions_table_format,
            'applink member list': applink_member_list_table_format,
            'applink member upgrade-history list': applink_member_upgrade_history_table_format,
        }

        # Apply table transformers to commands
        for command_name, transformer in table_transformers.items():
            if command_name in self.command_table:
                self.command_table[command_name].table_transformer = transformer

    def load_arguments(self, command):
        from azext_applink_preview._params import load_arguments
        load_arguments(self, command)


COMMAND_LOADER_CLS = ApplinkPreviewCommandsLoader
