# --------------------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
#
# Code generated by aaz-dev-tools
# --------------------------------------------------------------------------------------------

from azure.cli.testsdk import ScenarioTest, ResourceGroupPreparer


class ApplinkPreviewScenario(ScenarioTest):
    @ResourceGroupPreparer()
    def test_applink_list_no_resources(self, resource_group):
        # Test listing when no resources exist (would return empty list)
        # This test would only run when creating recordings with real authentication
        self.cmd('applink list --resource-group {rg}', checks=[
            self.check('length(@)', 0)  # Expect empty array
        ])

    @ResourceGroupPreparer()
    def test_applink_create(self, resource_group):
        # Test listing when no resources exist (would return empty list)
        # This test would only run when creating recordings with real authentication
        applink_name = self.create_applink()
        self.cmd('applink show --resource-group {rg} --name {name}', checks=[
            self.check("name", applink_name),
            self.check('properties.provisioningState', 'Succeeded')
        ])

    @ResourceGroupPreparer()
    def test_applink_delete(self, resource_group):
        self.create_applink()
        self.cmd('applink delete --resource-group {rg} --name {name} --yes')

    def create_applink(self):
        """Creates an applink, and returns its name. Additionally updates the kwargs to include the name"""
        applink_name = self.create_random_name(prefix="cli", length=20)
        self.kwargs.update({
            "name": applink_name
        })
        self.cmd('applink create --resource-group {rg} --applink-name {name} --location westus2', checks=[
            self.check("name", applink_name)
        ])
        return applink_name
